{"version":3,"sources":["Map.js","Grid.js","Graph.js","DataTable.js","App.js","Home.js","serviceWorker.js","index.js"],"names":["geojsonLayer","map","style","width","height","MapData","props","state","data","toposkaermkortwmts","L","tileLayer","wms","layers","token","format","attribution","center","zoom","legend","control","position","onAdd","div","DomUtil","create","innerHTML","addTo","costumIcon","status","icon","iconUrl","selector","shadowUrl","iconAnchor","shadowAnchor","popupAnchor","undefined","removeLayer","geoJSON","onEachFeature","feature","layer","bindPopup","properties","navn","pointToLayer","latlng","marker","fitBounds","getBounds","this","renderMap","length","renderFeatures","console","log","id","React","Component","StatusFormatter","value","color","StatusTypeProvider","formatterComponent","PnummerFormatter","link","href","target","rel","PnummerProvider","getRowId","row","GridData","rows","sorting","columnName","direction","statusColumns","pcols","grouping","changeSorting","setState","changeGrouping","pc","index","Paper","columns","name","title","defaultFilters","defaultSorting","for","defaultColumnWidths","showSortingControls","PureComponent","GraphData","clicked","fill","catData","dat","tilfl","filter","x","y","getSummaryData","domainPadding","theme","VictoryTheme","material","dataComponent","events","onMouseOver","fillColor","d","labels","moment","locale","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","createMuiTheme","typography","useNextVariants","suppressDeprecationWarnings","TabContainer","children","App","startDate","subtract","startOf","endDate","endOf","filteredData","kommuner","komkode","komnr","Fraflytter","Tilflytter","Oph√∏rt","Nystartet","csvData","loading","completed","canSendRequest","theData","handleChange","bind","handleStart","handleEnd","handleSelect","handleChecked","progress","handleDoneClick","comp","s","replace","checked","push","indexOf","that","jQuery","ajax","url","type","dataType","success","res","koms","features","preveState","csv","prevState","event","persist","_checked","newData","getData","getKommuner","navigate","date","MuiThemeProvider","className","AppBar","Toolbar","Grid","container","item","xs","Typography","variant","classnames","noValidate","autoComplete","TextField","select","label","placeholder","textField","onChange","SelectProps","native","helperText","InputLabelProps","shrink","kom","komnavn","key","utils","MomentUtils","DatePicker","IconButton","arial-label","onClick","element","filename","Tabs","centered","Tab","Tooltip","aria-label","Graph","withStyles","root","flexGrow","display","flexWrap","marginLeft","spacing","marginRight","dense","marginTop","menu","margin","Home","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2VASIA,EACAC,E,mXANEC,EAAQ,CACZC,MAAO,OACPC,OAAQ,SAoMKC,E,YA7Lb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,IAHS,E,yEAQjB,IAGIC,EAAqBC,IAAEC,UAAUC,IACnC,sDACA,CACEC,OAAQ,yBACRC,MALU,mCAMVC,OAAQ,YACRC,YARF,+JAWFf,EAAMS,IAAET,IAAI,MAAO,CACjBgB,OAAQ,CAAC,KAAM,MACfC,KAAM,EACNL,OAAQ,CAYNJ,KAIJ,IAAIU,EAAST,IAAEU,QAAQ,CAAEC,SAAU,eACnCF,EAAOG,MAAQ,SAASrB,GACtB,IAAIsB,EAAMb,IAAEc,QAAQC,OAAO,MAAO,UAUlC,OATAF,EAAIG,WAAa,8BACjBH,EAAIG,WACF,+DACFH,EAAIG,WACF,gEACFH,EAAIG,WACF,gEACFH,EAAIG,WACF,+DACKH,GAETJ,EAAOQ,MAAM1B,K,qCAEAO,GAEb,IAAIoB,EAAa,SAASC,GAexB,OAAOnB,IAAEoB,KAAK,CACZC,QAfF,SAAkBF,GAChB,OAAQA,GACN,IAAK,aACH,MAAO,YACT,IAAK,aACH,MAAO,YACT,IAAK,YACH,MAAO,YACT,IAAK,YACH,MAAO,aAMFG,CAASH,GAClBI,UAAW,iBACXC,WAAY,CAAC,GAAI,IACjBC,aAAc,CAAC,GAAI,IACnBC,YAAa,CAAC,GAAI,YAIDC,IAAjBrC,GACFC,EAAIqC,YAAYtC,GAelBA,EAAeU,IAAE6B,QAAQ/B,EAAM,CAC7BgC,cAbF,SAAuBC,EAASC,GAC9BA,EAAMC,UACJ,WACEF,EAAQG,WAAWf,OACnB,qBACAY,EAAQG,WAAWC,KACnB,sFACAJ,EAAQG,WAAW,YACnB,sCAMJE,aAAc,SAASL,EAASM,GAE9B,OAAOrC,IAAEsC,OAAOD,EAAQ,CACtBjB,KAAMF,EAAWa,EAAQG,WAAWf,aAGvCF,MAAM1B,GAETA,EAAIgD,UAAUjD,EAAakD,e,0CAG3BC,KAAKC,YACDD,KAAK7C,MAAME,KAAK6C,OAAS,GAC3BF,KAAKG,eAAeH,KAAK7C,MAAME,Q,2CAKjC+C,QAAQC,IAAI,sBAGRL,KAAK7C,MAAME,KAAK6C,OAAS,EAC3BF,KAAKG,eAAeH,KAAK7C,MAAME,MAE/B+C,QAAQC,IAAI,iB,oCAIFhD,GAGZ,IAAIoB,EAAa,SAASC,GAexB,OAAOnB,IAAEoB,KAAK,CACZC,QAfF,SAAkBF,GAChB,OAAQA,GACN,IAAK,aACH,MAAO,YACT,IAAK,aACH,MAAO,YACT,IAAK,YACH,MAAO,YACT,IAAK,YACH,MAAO,aAMFG,CAASH,GAClBI,UAAW,iBACXC,WAAY,CAAC,GAAI,IACjBC,aAAc,CAAC,GAAI,IACnBC,YAAa,CAAC,GAAI,YAIDC,IAAjBrC,GACFC,EAAIqC,YAAYtC,GAgBlBA,EAAeU,IAAE6B,QAAQ/B,EAAM,CAC7BgC,cAdF,SAAuBC,EAASC,GAE9BA,EAAMC,UACJ,WACEF,EAAQG,WAAWf,OACnB,qBACAY,EAAQG,WAAWC,KACnB,sFACAJ,EAAQG,WAAW,YACnB,sCAMJE,aAAc,SAASL,EAASM,GAC9B,OAAOrC,IAAEsC,OAAOD,EAAQ,CACtBjB,KAAMF,EAAWa,EAAQG,WAAWf,aAGvCF,MAAM1B,K,+BAOT,OAAO,yBAAKwD,GAAG,MAAMvD,MAAOA,Q,GA1LVwD,IAAMC,W,0BCuBtBC,EAAkB,SAAC,GAAe,IATvB/B,EASUgC,EAAY,EAAZA,MACrBC,EARW,gBAFAjC,EAUMgC,GARe,SAChB,eAAXhC,EAAgC,QACrB,cAAXA,EAA+B,OACpB,cAAXA,EAA4B,MACzB,OAKZ,OAAO,uBAAG3B,MAAO,CAAE4D,MAAOA,IAAUD,IAGhCE,EAAqB,SAAAzD,GAAK,OAC9B,kBAAC,IAAD,eAAkB0D,mBAAoBJ,GAAqBtD,KAGvD2D,EAAmB,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MAC1BN,QAAQC,IAAI,mBAAoBK,GAChC,IAAIK,EAAI,+EAA2EL,GACnF,OACE,uBAAGM,KAAMD,EAAME,OAAO,SAASC,IAAI,uBAChCR,IAKDS,GAAkB,SAAAhE,GAAK,OAC3B,kBAAC,IAAD,eAAkB0D,mBAAoBC,GAAsB3D,KAcxDiE,GAAW,SAAAC,GAEf,OAAOA,EAAG,UAkHGC,G,YAtGb,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXmE,KAAM,GACNlE,KAAM,GACNmE,QAAS,CAAC,CAAEC,WAAY,eAAgBC,UAAW,SACnDC,cAAe,CAAC,UAChBC,MAAO,CAAC,YACRC,SAAU,CAAC,CAAEJ,WAAY,YAE3B,EAAKK,cAAgB,SAAAN,GAAO,OAAI,EAAKO,SAAS,CAAEP,aAChD,EAAKQ,eAAiB,SAAAH,GAAQ,OAAI,EAAKE,SAAS,CAAEF,cAXjC,E,iKAmBjB,IAgCQF,EAAkB3B,KAAK5C,MAAvBuE,cACFM,EAAKjC,KAAK5C,MAAMwE,MAEhBL,EAAOvB,KAAK7C,MAAME,KAAKP,KAAI,SAACwC,EAAS4C,GAEzC,OADA5C,EAAQG,WAAR,SAAiCyC,EAC1B5C,EAAQG,cAIjB,OACE,kBAAC0C,EAAA,EAAD,CAAOpF,MAAO,CAAEE,OAAQ,UACtB,kBAAC,IAAD,CACEsE,KAAMA,EACNa,QA7CO,CACX,CAAEC,KAAM,SAAUC,MAAO,UACzB,CAAED,KAAM,aAAcC,MAAO,cAC7B,CAAED,KAAM,WAAYC,MAAO,YAC3B,CAAED,KAAM,eAAgBC,MAAO,WAC/B,CAAED,KAAM,OAAQC,MAAO,mBACvB,CAAED,KAAM,6BAA8BC,MAAO,iBAC7C,CAAED,KAAM,cAAeC,MAAO,eAC9B,CAAED,KAAM,UAAWC,MAAO,WAC1B,CAAED,KAAM,YAAaC,MAAO,aAC5B,CAAED,KAAM,aAAcC,MAAO,cAC7B,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,eAAgBC,MAAO,SAC/B,CAAED,KAAM,kBAAgBC,MAAO,oBAiC3BlB,SAAUA,GACVrE,MAAO,CAAEE,OAAQ,SAEjB,kBAAC,IAAD,CAAgBsF,eAAgB,KAChC,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,eAAgB,CAAC,CAAEf,WAAY,SAAUC,UAAW,WAEtD,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAoBe,IAAKd,IACzB,kBAAC,GAAD,CAAiBc,IAAKR,IACtB,kBAAC,IAAD,CAAchF,OAAO,SACrB,kBAAC,IAAD,CAAqByF,oBA1CC,CAC1B,CAAEjB,WAAY,SAAUzE,MAAO,KAC/B,CAAEyE,WAAY,aAAczE,MAAO,KACnC,CAAEyE,WAAY,WAAYzE,MAAO,KACjC,CAAEyE,WAAY,eAAgBzE,MAAO,KACrC,CAAEyE,WAAY,OAAQzE,MAAO,KAC7B,CAAEyE,WAAY,6BAA8BzE,MAAO,KACnD,CAAEyE,WAAY,cAAezE,MAAO,KACpC,CAAEyE,WAAY,UAAWzE,MAAO,KAChC,CAAEyE,WAAY,YAAazE,MAAO,KAClC,CAAEyE,WAAY,aAAczE,MAAO,KACnC,CAAEyE,WAAY,eAAgBzE,MAAO,KACrC,CAAEyE,WAAY,eAAgBzE,MAAO,KACrC,CAAEyE,WAAY,kBAAgBzE,MAAO,QA8BjC,kBAAC,IAAD,CAAgB2F,qBAAmB,IACnC,kBAAC,IAAD,Y,GAhFapC,IAAMqC,e,wCCwCdC,G,YA1Db,aAAe,IAAD,8BACZ,+CACKzF,MAAQ,CACX0F,SAAS,EACT/F,MAAO,CACLM,KAAM,CAAE0F,KAAM,YALN,E,sEAUJ,IAAD,OAYHC,EAlFe,SAAAC,GACrB,IAAI5F,EAAO4F,EAAInG,KAAI,SAAAwC,GAAO,OAAIA,EAAQG,cAClCyD,EAAQ7F,EAAK8F,QAAO,SAAAC,GACtB,MAAoB,eAAbA,EAAE1E,UACRwB,OAIH,MAAO,CACL,CAAEkD,EAAG,aAAcC,EAJThG,EAAK8F,QAAO,SAAAC,GAAC,MAAiB,eAAbA,EAAE1E,UAAyBwB,QAKtD,CAAEkD,EAAG,aAAcC,EAAGH,GACtB,CAAEE,EAAG,YAAUC,EALPhG,EAAK8F,QAAO,SAAAC,GAAC,MAAiB,cAAbA,EAAE1E,UAAqBwB,QAMhD,CAAEkD,EAAG,YAAaC,EALXhG,EAAK8F,QAAO,SAAAC,GAAC,MAAiB,cAAbA,EAAE1E,UAAwBwB,SA2EpCoD,CAAetD,KAAK7C,MAAME,MAGxC,OACE,6BACE,kBAAC8E,EAAA,EAAD,CAAOpF,MAAO,CAAEE,OAAQ,UACtB,kBAAC,KAAD,CACEA,OAAQ,IACRD,MAAO,IACPuG,cAAe,CAAEH,EAAG,GAAIC,EAAG,CAAC,EAAG,KAC/BG,MAAOC,KAAaC,UAIpB,kBAAC,KAAD,CACEC,cAAe,kBAAC,KAAD,CAAKC,OAAQ,CAAEC,YA1BhB,WACtB,IAAMC,EAAY,EAAK1G,MAAM0F,QAAU,OAAS,SAC1CA,GAAW,EAAK1F,MAAM0F,QAC5B,EAAKf,SAAS,CACZe,UACA/F,MAAO,CACLM,KAAM,CAAE0F,KAAMe,UAqBV/G,MAAO,CACLM,KAAM,CACJ0F,KAAM,SAAAgB,GACJ,MAAY,eAARA,EAAEX,EAA2B,SACrB,eAARW,EAAEX,EAA2B,QACrB,cAARW,EAAEX,EAAuB,MACjB,cAARW,EAAEX,EAA0B,YAAhC,KAIN/F,KAAM2F,EACNgB,OAAQ,SAAAD,GAAC,OAAIA,EAAEV,Y,GAlDL9C,IAAMC,W,qBC3DxB4B,GAAU,CAAC,OAAQ,UAAW,OAAQ,SAEtC/E,GAAO,CACX,CAAC,YAAa,YAAa,UAAW,MACtC,CAAC,aAAc,YAAa,WAAY,MACxC,CAAC,WAAY,YAAa,QAAS,MACnC,CAAC,gBAAiB,YAAa,SAAU,O,IAOnBkD,IAAMqC,c,mECyB9BqB,IAAOC,OAAO,MAEd,IAAMC,GAAYC,KAAYD,UACxBE,GAAaD,KAAYD,UAAUE,WACnCC,GAAcF,KAAYD,UAAUG,YA2BpCd,GAAQe,YAAe,CACzBC,WAAY,CACVC,iBAAiB,EACjBC,6BAA6B,KAMnC,SAASC,GAAaxH,GAClB,OACI,6BACKA,EAAMyH,U,IAUbC,G,YACF,WAAY1H,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTsD,MAAO,EACPoE,UAAWb,MAASc,SAAS,EAAE,UAAUC,QAAQ,SAASpH,OAAO,cACjEqH,QAAShB,MAASc,SAAS,EAAE,UAAUG,MAAM,SAAStH,OAAO,cAC7DP,KAAM,GACN8H,aAAc,GACdC,SAAU,GACVC,QAAS,EAAKlI,MAAMmI,MACpBC,YAAY,EACZC,YAAY,EACZC,aAAQ,EACRC,WAAU,EACVC,QAAS,GACTC,SAAS,EACTC,UAAW,EACXC,gBAAe,GAGnB,EAAKC,QAAU,GACf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,cAAgB,EAAKA,cAAcJ,KAAnB,gBACrB,EAAKK,SAAW,EAAKA,SAASL,KAAd,gBAChB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBA3BT,E,wEAiCd,IAAIO,EAAOxG,KAAK5C,MAAMyI,UACtB7F,KAAK+B,SAAS,CAAE8D,UAAYW,GAAQ,IAAM,EAAIA,EAAO,M,+BAYrD,OARYxG,KAAK5C,MAAMC,KAAKP,KAAI,SAAAwC,GAC5B,IAAImH,EAAInH,EAAQG,WAAW,8BAI3B,OAHS,OAANgH,GAAcA,EAAEvG,OAAS,IACxBZ,EAAQG,WAAW,8BAAgCgH,EAAEC,QAAQ,KAAK,KAE/DpH,EAAQG,gB,iCAQZH,GAAS,IAAD,EACsCU,KAAK5C,MAAlDmI,EADO,EACPA,WAAYC,EADL,EACKA,WAAYC,EADjB,EACiBA,YAAQC,EADzB,EACyBA,UAClCiB,EAAU,GAKhB,OAJGpB,GAAYoB,EAAQC,KAAK,cACzBpB,GAAYmB,EAAQC,KAAK,cACzBnB,GAAQkB,EAAQC,KAAK,aACrBlB,GAAWiB,EAAQC,KAAK,aACpBD,EAAQE,QAAQvH,EAAQG,WAAWf,SAAW,I,oCAOrD,IACIoI,EAAO9G,KACX+G,KAAOC,KAAK,CACRC,IAHS,WAITC,KAAM,MACNC,SAAU,OACVC,QAAS,SAASC,GACd,IAAIC,EAAOD,EAAIE,SAASzK,KAAI,SAAAwC,GAAO,OAAIA,EAAQG,cAC/CqH,EAAK/E,UAAS,SAACyF,GAAD,MAAiB,CAACpC,SAAUkC,W,8BAK9CjC,EAAQP,EAAWG,GACvBjF,KAAK+B,UAAS,SAACyF,GAAD,MAAiB,CAAC7B,QAAS,GAAIC,SAAS,MACtD,IAAIkB,EAAO9G,KACX,GAAIqF,EAAJ,CAOA0B,KAAOC,KAAK,CACRC,IAFU,YAGVC,KAAM,MACNC,SAAU,OACVC,QAAS,SAASC,GACdP,EAAK/E,UAAS,SAACyF,GAAD,MAAiB,CAACnK,KAAMgK,EAAIE,aAE1C,IAAIE,EAAMJ,EAAIE,SAASzK,KAAI,SAAAwC,GAAO,OAAIA,EAAQG,cAC9CqH,EAAK/E,UAAS,SAAC2F,GAAD,MAAgB,CAAC/B,QAAS8B,EAAK7B,SAAS,cAd1D5F,KAAK+B,SAAS,CAAC6D,SAAQ,M,oCAmBjB+B,GAAO,IAAD,OAChBA,EAAMC,UADU,MAEwC5H,KAAK5C,MAAxDC,EAFW,EAEXA,KAAMkI,EAFK,EAELA,WAAYC,EAFP,EAEOA,WAAYC,EAFnB,EAEmBA,YAAQC,EAF3B,EAE2BA,UAC3C1F,KAAK+B,UAAS,SAACyF,GAAD,sBAAmBG,EAAM1G,OAAOP,MAAQiH,EAAM1G,OAAO0F,YAAU,WACzEpB,EAAa,EAAKnI,MAAMmI,WACxBC,EAAa,EAAKpI,MAAMoI,WACxBC,EAAS,EAAKrI,MAAMqI,YACpBC,EAAa,EAAKtI,MAAMsI,aAI5B,IAAMmC,EAAW,GACdtC,GAAYsC,EAASjB,KAAK,cAC1BpB,GAAYqC,EAASjB,KAAK,cAC1BnB,GAAQoC,EAASjB,KAAK,aACtBlB,GAAWmC,EAASjB,KAAK,aAE5B,IAAIkB,EAAUzK,EAAK8F,QAAO,SAAC7D,GAEvB,OAAOuI,EAAShB,QAAQvH,EAAQG,WAAWf,SAAW,KAI1DsB,KAAK+B,SAAS,CAAC1E,KAAMyK,M,mCAKZH,GACTA,EAAMC,UACN5H,KAAK+B,UAAS,SAAC2F,GAAD,MAAgB,CAACrC,QAAUsC,EAAM1G,OAAOP,Y,0CAGtC,IAAD,EACuBV,KAAK5C,MAArCiI,EADS,EACTA,QAASP,EADA,EACAA,UAAWG,EADX,EACWA,QAC1BjF,KAAK+H,QAAQ1C,EAASP,EAAWG,GACjCjF,KAAKgI,gB,mFAOIL,EAAOjH,GACjBV,KAAK+B,SAAS,CAAErB,Y,wCAGD,IAAD,EACuBV,KAAK5C,MAApCiI,EADQ,EACRA,QAASP,EADD,EACCA,UAAWG,EADZ,EACYA,QACzBjF,KAAK+H,QAAQ1C,EAAQP,EAAUG,GAC/BgD,YAAS,IAAD,OAAK5C,M,kCAGL6C,GACRlI,KAAK+B,SAAS,CACV+C,UAAWoD,EAAKtK,OAAO,kB,gCAIrBsK,GACNlI,KAAK+B,SAAS,CACVkD,QAASiD,EAAKtK,OAAO,kB,+BAIpB,IAAD,OACJwC,QAAQC,IAAI,wBAAwBL,KAAK7C,MAAMmI,OAD3C,MAEqDtF,KAAK5C,MAAtDsD,EAFJ,EAEIA,MAAOoE,EAFX,EAEWA,UAAWG,EAFtB,EAEsBA,QAASG,EAF/B,EAE+BA,SAAUC,EAFzC,EAEyCA,QAE7C,OACI,kBAAC8C,EAAA,EAAD,CAAkB3E,MAAOA,IAErB,yBAAK4E,UAAU,OACX,yBAAKA,UAAWpI,KAAK5C,MAAMwI,QAAU,UAAU,KAC/C,yBAAKwC,UAAU,IACX,kBAACC,EAAA,EAAD,CAAQnK,SAAS,SAASyC,MAAM,WAC5B,kBAAC2H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKjI,MAAM,WAA/B,yBAIJ,kBAAC4H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,0BAAMN,UAAWS,KAAWL,UAAWM,YAAU,EAACC,aAAa,OAC3D,kBAACC,EAAA,EAAD,CACI1I,GAAG,kBACH2I,QAAM,EACNC,MAAM,UACNC,YAAY,cACZf,UAAWS,KAAWO,UACtB1I,MAAOV,KAAK5C,MAAMiI,SAAW,GAC7BgE,SAAUrJ,KAAKoG,aACfkD,YAAa,CACTC,QAAQ,GAGZC,WAAW,GACXC,gBAAiB,CAAEC,QAAQ,IAE9BtE,EAAStI,KAAI,SAAA6M,GAGV,OAFe,EAAKvM,MAAMiI,UAAYsE,EAAItE,SAAU,YACvCjF,QAAQC,IAAIsJ,EAAIC,SAE7B,4BAAQC,IAAKF,EAAItE,QAAS3E,MAAOiJ,EAAItE,SAChCsE,EAAIC,eAMrB,kBAACrB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,IAAD,CAAyBoB,MAAOC,IAAa7F,OA5C9D,KA4C8ED,OAAQA,KACjE,kBAAC+F,EAAA,EAAD,CACItJ,MAAOoE,EACPoE,MAAM,YACNtL,OAAO,cACPyL,SAAUrJ,KAAKkG,gBAI3B,kBAACqC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,IAAD,CAAyBoB,MAAOC,KAC5B,kBAACC,EAAA,EAAD,CACItJ,MAAOuE,EACPiE,MAAM,WACNtL,OAAO,cACPyL,SAAUrJ,KAAKmG,cAI3B,kBAACoC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACuB,EAAA,EAAD,CAAYC,cAAY,OAAOC,QAASnK,KAAKuG,iBACzC,kBAAC,IAAD,QAIR,kBAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAIP1I,KAAK5C,MAAMuI,QAAQzF,OAAS,GAExB,kBAACiE,GAAD,CACAiG,QACI,kBAACH,EAAA,EAAD,CAAYC,cAAY,SACpB,kBAAC,IAAD,OAGRG,SAAU,UAAWhF,EAAU,IAAMP,EAAY,IAAMG,GAEvD,kBAACZ,GAAD,CAAYhH,KAAM2C,KAAK5C,MAAMuI,QAAStD,KAAK,OACvC,kBAACiC,GAAD,CAAa4E,MAAM,SAASxI,MAAM,WAClC,kBAAC4D,GAAD,CAAa4E,MAAM,aAAaxI,MAAM,eACtC,kBAAC4D,GAAD,CAAa4E,MAAM,WAAWxI,MAAM,aACpC,kBAAC4D,GAAD,CAAa4E,MAAM,UAAUxI,MAAM,iBACnC,kBAAC4D,GAAD,CAAa4E,MAAM,kBAAkBxI,MAAM,SAC3C,kBAAC4D,GAAD,CAAa4E,MAAM,gBAAgBxI,MAAM,+BACzC,kBAAC4D,GAAD,CAAa4E,MAAM,cAAcxI,MAAM,gBACvC,kBAAC4D,GAAD,CAAa4E,MAAM,UAAUxI,MAAM,YACnC,kBAAC4D,GAAD,CAAa4E,MAAM,YAAYxI,MAAM,cACrC,kBAAC4D,GAAD,CAAa4E,MAAM,aAAaxI,MAAM,eACtC,kBAAC4D,GAAD,CAAa4E,MAAM,KAAKxI,MAAM,iBAC9B,kBAAC4D,GAAD,CAAa4E,MAAM,QAAQxI,MAAM,iBACjC,kBAAC4D,GAAD,CAAa4E,MAAM,kBAAexI,MAAM,0BAchE,kBAAC4J,EAAA,EAAD,CACI5J,MAAOA,EACP2I,SAAUrJ,KAAKgG,aACfuE,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAK7L,KACD,kBAAC8L,EAAA,EAAD,CAASnI,MAAM,QACX,kBAAC,IAAD,SAGR,kBAACkI,EAAA,EAAD,CAAK7L,KACD,kBAAC8L,EAAA,EAAD,CAASnI,MAAM,SACX,kBAAC,IAAD,OAIRoI,aAAW,UAEX,kBAACF,EAAA,EAAD,CAAK7L,KACD,kBAAC8L,EAAA,EAAD,CAASnI,MAAM,WACX,kBAAC,IAAD,UAWL,IAAV5B,GAAe,kBAACiE,GAAD,KAAc,kBAAC,EAAD,CAAStH,KAAM2C,KAAK5C,MAAMC,QAC7C,IAAVqD,GAAe,kBAACiE,GAAD,KAAc,kBAAC,GAAD,CAAUtH,KAAM2C,KAAK5C,MAAMC,QAC9C,IAAVqD,GAAe,kBAACiE,GAAD,KAAc,kBAACgG,GAAD,CAAWtN,KAAM2C,KAAK5C,MAAMC,e,GAzThEmD,aAoXHoK,gBAlaA,SAAApH,GAAK,MAAK,CACrBqH,KAAM,CACFC,SAAU,GAEdtC,UAAW,CACPuC,QAAS,OACTC,SAAU,QAEd5B,UAAW,CACP6B,WAAYzH,EAAM0H,QAAQ,GAC1BC,YAAa3H,EAAM0H,QAAQ,GAC3BlO,MAAO,KAEXoO,MAAO,CACHC,UAAW,IAEfC,KAAM,CACFtO,MAAO,KAEXsJ,SAAU,CACNiF,OAA2B,EAAnB/H,EAAM0H,QAAQ,OA8YfN,CAAmB/F,ICxcnB2G,GAPF,kBACX,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAKC,KAAK,MACV,kBAAC,GAAD,CAAKA,KAAK,cCKMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,GAAD,MAAUC,SAASC,eAAe,SD0H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.fb6f7418.chunk.js","sourcesContent":["import React from \"react\";\r\nimport L from \"leaflet\";\r\n//import axios from \"axios\";\r\n\r\nconst style = {\r\n  width: \"100%\",\r\n  height: \"600px\"\r\n};\r\n\r\nvar geojsonLayer;\r\nvar map;\r\n\r\nclass MapData extends React.Component {\r\n  constructor(props) {\r\n    super(props); // console.log(props.data);\r\n    this.state = {\r\n      data: {}\r\n    };\r\n  }\r\n\r\n  renderMap() {\r\n    var myAttributionText =\r\n      '&copy; <a target=\"_blank\" href=\"https://download.kortforsyningen.dk/content/vilk%C3%A5r-og-betingelser\">Styrelsen for Dataforsyning og Effektivisering</a>';\r\n    var kftoken = \"d12107f70a3ee93153f313c7c502169a\";\r\n    var toposkaermkortwmts = L.tileLayer.wms(\r\n      \"https://services.kortforsyningen.dk/topo_skaermkort\",\r\n      {\r\n        layers: \"dtk_skaermkort_daempet\",\r\n        token: kftoken,\r\n        format: \"image/png\",\r\n        attribution: myAttributionText\r\n      }\r\n    );\r\n    map = L.map(\"map\", {\r\n      center: [55.2, 12.2],\r\n      zoom: 9,\r\n      layers: [\r\n        // L.tileLayer(\r\n        //   \"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}\",\r\n        //   {\r\n        //     attribution:\r\n        //       'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery ¬© <a href=\"http://mapbox.com\">Mapbox</a>',\r\n        //     maxZoom: 14,\r\n        //     id: \"baffioso.ie1ok8lg\",\r\n        //     accessToken:\r\n        //       \"pk.eyJ1IjoiYmFmZmlvc28iLCJhIjoiT1JTS1lIMCJ9.f5ubY91Bi42yPnTrgiq-Gw\"\r\n        //   }\r\n        // )\r\n        toposkaermkortwmts\r\n      ]\r\n    });\r\n\r\n    var legend = L.control({ position: \"bottomleft\" });\r\n    legend.onAdd = function(map) {\r\n      var div = L.DomUtil.create(\"div\", \"legend\");\r\n      div.innerHTML += \"<h4>Signaturforklaring</h4>\";\r\n      div.innerHTML +=\r\n        '<i style=\"background:#0020d7\"></i><span>NyStartet</span><br>';\r\n      div.innerHTML +=\r\n        '<i style=\"background:#d79700\"></i><span>Fraflyttet</span><br>';\r\n      div.innerHTML +=\r\n        '<i style=\"background:#298b30\"></i><span>Tilflyttet</span><br>';\r\n      div.innerHTML +=\r\n        '<i style=\"background:#c10a0a\"></i><span>Oph√∏rt</span><br>';\r\n      return div;\r\n    };\r\n    legend.addTo(map);\r\n  }\r\n  renderFeatures(data) {\r\n    //console.log('renderfeatures'); console.log(data);\r\n    var costumIcon = function(status) {\r\n      function selector(status) {\r\n        switch (status) {\r\n          case \"Tilflytter\":\r\n            return \"img/t.png\";\r\n          case \"Fraflytter\":\r\n            return \"img/f.png\";\r\n          case \"Nystartet\":\r\n            return \"img/n.png\";\r\n          case \"Oph√∏rt\":\r\n            return \"img/o.png\";\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      return L.icon({\r\n        iconUrl: selector(status),\r\n        shadowUrl: \"img/shadow.png\",\r\n        iconAnchor: [16, 37],\r\n        shadowAnchor: [20, 35],\r\n        popupAnchor: [0, -30]\r\n      });\r\n    };\r\n\r\n    if (geojsonLayer !== undefined) {\r\n      map.removeLayer(geojsonLayer);\r\n    }\r\n\r\n    function onEachFeature(feature, layer) {\r\n      layer.bindPopup(\r\n        \"<strong>\" +\r\n          feature.properties.status +\r\n          \"</strong></br><hr>\" +\r\n          feature.properties.navn +\r\n          '</br><a href=\"https://datacvr.virk.dk/data/visenhed?enhedstype=produktionsenhed&id=' +\r\n          feature.properties[\"p-nummer\"] +\r\n          '\" target=\"_blank\">Se mere her</a>'\r\n      );\r\n    }\r\n\r\n    geojsonLayer = L.geoJSON(data, {\r\n      onEachFeature: onEachFeature,\r\n      pointToLayer: function(feature, latlng) {\r\n        //return L.circleMarker(latlng, geojsonMarkerOptions);\r\n        return L.marker(latlng, {\r\n          icon: costumIcon(feature.properties.status)\r\n        });\r\n      }\r\n    }).addTo(map);\r\n\r\n    map.fitBounds(geojsonLayer.getBounds());\r\n  }\r\n  componentDidMount() {\r\n    this.renderMap();\r\n    if (this.props.data.length > 0) {\r\n      this.renderFeatures(this.props.data);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"componentdidupdate\");\r\n    //const { data } = this.props;\r\n    //this.renderFeatures(data);\r\n    if (this.props.data.length > 0) {\r\n      this.renderFeatures(this.props.data);\r\n    } else {\r\n      console.log(\"props empty\");\r\n    }\r\n  }\r\n\r\n  renderMarkers(data) {\r\n    //select marker depending on status\r\n    //let mymap = this.map;\r\n    var costumIcon = function(status) {\r\n      function selector(status) {\r\n        switch (status) {\r\n          case \"Tilflytter\":\r\n            return \"img/t.png\";\r\n          case \"Fraflytter\":\r\n            return \"img/f.png\";\r\n          case \"Nystartet\":\r\n            return \"img/n.png\";\r\n          case \"Oph√∏rt\":\r\n            return \"img/o.png\";\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      return L.icon({\r\n        iconUrl: selector(status),\r\n        shadowUrl: \"img/shadow.png\",\r\n        iconAnchor: [16, 37],\r\n        shadowAnchor: [20, 35],\r\n        popupAnchor: [0, -30]\r\n      });\r\n    };\r\n    //check if there is markers on the map and remove\r\n    if (geojsonLayer !== undefined) {\r\n      map.removeLayer(geojsonLayer);\r\n    }\r\n\r\n    function onEachFeature(feature, layer) {\r\n      //console.log(layer);\r\n      layer.bindPopup(\r\n        \"<strong>\" +\r\n          feature.properties.status +\r\n          \"</strong></br><hr>\" +\r\n          feature.properties.navn +\r\n          '</br><a href=\"https://datacvr.virk.dk/data/visenhed?enhedstype=produktionsenhed&id=' +\r\n          feature.properties[\"p-nummer\"] +\r\n          '\" target=\"_blank\">Se mere her</a>'\r\n      );\r\n    }\r\n\r\n    geojsonLayer = L.geoJSON(data, {\r\n      onEachFeature: onEachFeature,\r\n      pointToLayer: function(feature, latlng) {\r\n        return L.marker(latlng, {\r\n          icon: costumIcon(feature.properties.status)\r\n        });\r\n      }\r\n    }).addTo(map);\r\n\r\n    // console.log(geojsonLayer.getBounds());\r\n    // map.fitBounds(geojsonLayer.getBounds());\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"map\" style={style}></div>;\r\n  }\r\n}\r\n\r\nexport default MapData;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  FilteringState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider\r\n  //  GroupingState,\r\n  // IntegratedGrouping\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  // Table,\r\n  VirtualTable,\r\n  TableHeaderRow,\r\n  TableFilterRow,\r\n  // TableColumnReordering,\r\n  TableColumnResizing\r\n  // TableGroupRow,\r\n  // GroupingPanel,\r\n  // DragDropProvider,\r\n  // Toolbar\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n//import axios from \"axios\";\r\n\r\nconst getColor = status => {\r\n  //console.log('status = ',status);\r\n  if (status === \"Fraflytter\") return \"orange\";\r\n  else if (status === \"Tilflytter\") return \"green\";\r\n  else if (status === \"Nystartet\") return \"blue\";\r\n  else if (status === \"Oph√∏rt\") return \"red\";\r\n  else return \"blue\";\r\n};\r\n\r\nconst StatusFormatter = ({ value }) => {\r\n  let color = getColor(value);\r\n  return <b style={{ color: color }}>{value}</b>;\r\n};\r\n\r\nconst StatusTypeProvider = props => (\r\n  <DataTypeProvider formatterComponent={StatusFormatter} {...props} />\r\n);\r\n\r\nconst PnummerFormatter = ({ value }) => {\r\n  console.log(\"reach pnummer =>\", value);\r\n  let link = `https://datacvr.virk.dk/data/visenhed?enhedstype=produktionsenhed&id=${value}`;\r\n  return (\r\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {value}\r\n    </a>\r\n  );\r\n};\r\n\r\nconst PnummerProvider = props => (\r\n  <DataTypeProvider formatterComponent={PnummerFormatter} {...props} />\r\n);\r\n\r\n// const HighlightedCell = ({ value, style }) => {\r\n//   let color = getColor(value);\r\n//   return (\r\n//     <Table.Cell\r\n//       style={{\r\n//         backgroundColor: color\r\n//       }}\r\n//     ></Table.Cell>\r\n//   );\r\n// };\r\n\r\nconst getRowId = row => {\r\n  //  console.log('row id => ',row['cvr-nummer']);\r\n  return row[\"keyIndex\"];\r\n};\r\n\r\n// const Cell = props => {\r\n//   const { column } = props;\r\n//   if (column.name === \"status\") {\r\n//     return <HighlightedCell {...props} />;\r\n//   }\r\n//   return <Table.Cell {...props} />;\r\n// };\r\n\r\nclass GridData extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      data: [],\r\n      sorting: [{ columnName: \"hovedbranche\", direction: \"desc\" }],\r\n      statusColumns: [\"status\"],\r\n      pcols: [\"p-nummer\"],\r\n      grouping: [{ columnName: \"status\" }]\r\n    };\r\n    this.changeSorting = sorting => this.setState({ sorting });\r\n    this.changeGrouping = grouping => this.setState({ grouping });\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate() {}\r\n\r\n  render() {\r\n    const cols = [\r\n      { name: \"status\", title: \"Status\" },\r\n      { name: \"cvr-nummer\", title: \"CVR nummer\" },\r\n      { name: \"p-nummer\", title: \"P nummer\" },\r\n      { name: \"hovedbranche\", title: \"Branche\" },\r\n      { name: \"navn\", title: \"Virksomhedsnavn\" },\r\n      { name: \"fuldt ansvarlige deltagere\", title: \"Kontaktperson\" },\r\n      { name: \"kommunekode\", title: \"Kommunekode\" },\r\n      { name: \"vejnavn\", title: \"Vejnavn\" },\r\n      { name: \"husnummer\", title: \"Husnummer\" },\r\n      { name: \"postnummer\", title: \"Postnummer\" },\r\n      { name: \"postdistrikt\", title: \"By\" },\r\n      { name: \"emailadresse\", title: \"Email\" },\r\n      { name: \"indl√¶st dato\", title: \"Indl√¶st dato\" }\r\n    ];\r\n\r\n    const defaultColumnWidths = [\r\n      { columnName: \"status\", width: 120 },\r\n      { columnName: \"cvr-nummer\", width: 120 },\r\n      { columnName: \"p-nummer\", width: 120 },\r\n      { columnName: \"hovedbranche\", width: 150 },\r\n      { columnName: \"navn\", width: 150 },\r\n      { columnName: \"fuldt ansvarlige deltagere\", width: 120 },\r\n      { columnName: \"kommunekode\", width: 120 },\r\n      { columnName: \"vejnavn\", width: 120 },\r\n      { columnName: \"husnummer\", width: 120 },\r\n      { columnName: \"postnummer\", width: 120 },\r\n      { columnName: \"postdistrikt\", width: 120 },\r\n      { columnName: \"emailadresse\", width: 120 },\r\n      { columnName: \"indl√¶st dato\", width: 120 }\r\n    ];\r\n\r\n    const { statusColumns } = this.state;\r\n    const pc = this.state.pcols;\r\n    //console.log(pc);\r\n    const rows = this.props.data.map((feature, index) => {\r\n      feature.properties[\"keyIndex\"] = index;\r\n      return feature.properties;\r\n    });\r\n\r\n    // console.log(rows);\r\n    return (\r\n      <Paper style={{ height: \"600px\" }}>\r\n        <Grid\r\n          rows={rows}\r\n          columns={cols}\r\n          getRowId={getRowId}\r\n          style={{ height: \"100%\" }}\r\n        >\r\n          <FilteringState defaultFilters={[]} />\r\n          <IntegratedFiltering />\r\n          <SortingState\r\n            defaultSorting={[{ columnName: \"status\", direction: \"desc\" }]}\r\n          />\r\n          <IntegratedSorting />\r\n          <StatusTypeProvider for={statusColumns} />\r\n          <PnummerProvider for={pc} />\r\n          <VirtualTable height=\"auto\" />\r\n          <TableColumnResizing defaultColumnWidths={defaultColumnWidths} />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableFilterRow />\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n/*\r\n\r\n                <FilteringState defaultFilters={[]} />\r\n                <IntegratedFiltering />\r\n                <SortingState defaultSorting={[{ columnName: 'status', direction: 'desc' }]} />\r\n                <IntegratedSorting />\r\n                <StatusTypeProvider \r\n                    for={statusColumns}\r\n                />\r\n                <VirtualTable\r\n                    height=\"auto\"\r\n                />\r\n                <TableColumnResizing defaultColumnWidths={defaultColumnWidths} />\r\n                <TableHeaderRow showSortingControls />\r\n                <TableFilterRow />\r\n\r\n*/\r\nexport default GridData;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { VictoryBar, VictoryChart, Bar, VictoryTheme } from \"victory\";\r\n\r\nconst getSummaryData = dat => {\r\n  let data = dat.map(feature => feature.properties);\r\n  let tilfl = data.filter(x => {\r\n    return x.status === \"Tilflytter\";\r\n  }).length;\r\n  let frafl = data.filter(x => x.status === \"Fraflytter\").length;\r\n  let oph = data.filter(x => x.status === \"Oph√∏rt\").length;\r\n  let ny = data.filter(x => x.status === \"Nystartet\").length;\r\n  return [\r\n    { x: \"Fraflytter\", y: frafl },\r\n    { x: \"Tilflytter\", y: tilfl },\r\n    { x: \"Oph√∏rt\", y: oph },\r\n    { x: \"Nystartet\", y: ny }\r\n  ];\r\n};\r\n\r\n// const getSummaryPerCategory = data => {\r\n//   let _data = data.map(feature => feature.properties);\r\n//   let stats = {\r\n//     fraflytter: {},\r\n//     tilflytter: {},\r\n//     ophoert: {},\r\n//     nystartet: {}\r\n//   };\r\n//   let summary = {\r\n//     fraflytter: _data.filter(x => x.status === \"Fraflytter\"),\r\n//     tilflytter: _data.filter(x => x.status === \"Tilflytter\"),\r\n//     ophoert: _data.filter(x => x.status === \"Oph√∏rt\"),\r\n//     nystartet: _data.filter(x => x.status === \"Nystartet\")\r\n//   };\r\n//   for (let key in summary) {\r\n//     let elem = summary[key];\r\n//     elem.forEach(category => {\r\n//       // console.log('category name =>', category);\r\n//       let k = category.hovedbranche;\r\n//       if (k in stats[key]) {\r\n//         stats[key][k] = stats[key][k] + 1;\r\n//       } else {\r\n//         stats[key][k] = 1;\r\n//       }\r\n//     });\r\n//   }\r\n//   return stats;\r\n// };\r\n/*\r\nconst getBrancheData = data => {\r\n  let _data = data.map(feature => feature.properties);\r\n  let stats = {};\r\n  _data.forEach(element => {\r\n    let key = element.hovedbranche;\r\n    if (key in stats) {\r\n      stats[key] = stats[key] + 1;\r\n    } else {\r\n      stats[key] = 0;\r\n    }\r\n  });\r\n  return stats;\r\n};\r\n*/\r\nclass GraphData extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      clicked: false,\r\n      style: {\r\n        data: { fill: \"tomato\" }\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleMouseOver = () => {\r\n      const fillColor = this.state.clicked ? \"blue\" : \"tomato\";\r\n      const clicked = !this.state.clicked;\r\n      this.setState({\r\n        clicked,\r\n        style: {\r\n          data: { fill: fillColor }\r\n        }\r\n      });\r\n    };\r\n\r\n    let catData = getSummaryData(this.props.data);\r\n    //let sumData = getSummaryPerCategory(this.props.data);\r\n\r\n    return (\r\n      <div>\r\n        <Paper style={{ height: \"600px\" }}>\r\n          <VictoryChart\r\n            height={200}\r\n            width={200}\r\n            domainPadding={{ x: 50, y: [0, 20] }}\r\n            theme={VictoryTheme.material}\r\n            //domainPadding={10}\r\n            // scale={{ x: \"time\" }}\r\n          >\r\n            <VictoryBar\r\n              dataComponent={<Bar events={{ onMouseOver: handleMouseOver }} />}\r\n              style={{\r\n                data: {\r\n                  fill: d => {\r\n                    if (d.x === \"Fraflytter\") return \"orange\";\r\n                    if (d.x === \"Tilflytter\") return \"green\";\r\n                    if (d.x === \"Oph√∏rt\") return \"red\";\r\n                    if (d.x === \"Nystartet\") return \"blue\";\r\n                  }\r\n                }\r\n              }}\r\n              data={catData}\r\n              labels={d => d.y}\r\n            />\r\n          </VictoryChart>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphData;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nconst columns = [\"Name\", \"Company\", \"City\", \"State\"];\r\n\r\nconst data = [\r\n  [\"Joe James\", \"Test Corp\", \"Yonkers\", \"NY\"],\r\n  [\"John Walsh\", \"Test Corp\", \"Hartford\", \"CT\"],\r\n  [\"Bob Herm\", \"Test Corp\", \"Tampa\", \"FL\"],\r\n  [\"James Houston\", \"Test Corp\", \"Dallas\", \"TX\"]\r\n];\r\n\r\nconst options = {\r\n  filterType: \"checkbox\"\r\n};\r\n\r\nclass DataTable extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper style={{ height: \"600px\" }}>\r\n        <MUIDataTable title={\"Employee List\"} data={data} columns={columns} />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Switch from '@material-ui/core/Switch';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n// import CircularProgress from '@material-ui/core/CircularProgress'; \r\n//import 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/da';\r\n// import Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import { KeyboardArrowRight, KeyboardArrowLeft } from '@material-ui/icons';\r\nimport CloudDownload from '@material-ui/icons/CloudDownload';\r\nimport Map from '@material-ui/icons/Map';\r\nimport TableChart from '@material-ui/icons/TableChart';\r\nimport BarChart from '@material-ui/icons/BarChart';\r\n// import MomentUtils from 'material-ui-pickers/utils/moment-utils';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport {DatePicker} from '@material-ui/pickers';\r\n//import {hot} from 'react-hot-loader';\r\nimport MapData from './Map.js';\r\nimport GridData from './Grid.js';\r\nimport GraphData from './Graph.js';\r\nimport DataTable from './DataTable';\r\nimport './App.css';\r\nimport classnames from 'classnames';\r\nimport ReactExport from 'react-data-export';\r\nimport jQuery from 'jquery';\r\nimport {navigate} from '@reach/router';\r\n\r\nmoment.locale('da');\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    dense: {\r\n        marginTop: 19,\r\n    },\r\n    menu: {\r\n        width: 300,\r\n    },\r\n    progress: {\r\n        margin: theme.spacing(1) * 2\r\n    }\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n      useNextVariants: true,\r\n      suppressDeprecationWarnings: true\r\n    }\r\n  });\r\n\r\n//TODO: complete the select  comp!!!\r\n\r\nfunction TabContainer(props){\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n};\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            startDate: moment().subtract(1,'months').startOf('month').format('YYYY-MM-DD'),\r\n            endDate: moment().subtract(1,'months').endOf('month').format('YYYY-MM-DD'),\r\n            data: [],\r\n            filteredData: [],\r\n            kommuner: [],\r\n            komkode: this.props.komnr, //'165',\r\n            Fraflytter: true,\r\n            Tilflytter: true,\r\n            Oph√∏rt: true,\r\n            Nystartet:true,\r\n            csvData: [],\r\n            loading: true,\r\n            completed: 0,\r\n            canSendRequest:false\r\n        }\r\n\r\n        this.theData = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleStart = this.handleStart.bind(this);\r\n        this.handleEnd = this.handleEnd.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handleChecked = this.handleChecked.bind(this);\r\n        this.progress = this.progress.bind(this);\r\n        this.handleDoneClick = this.handleDoneClick.bind(this);\r\n    \r\n    }\r\n\r\n    progress(){\r\n        //console.log();\r\n        let comp = this.state.completed;\r\n        this.setState({ completed : comp >= 100 ? 0 : comp + 1});\r\n    }\r\n\r\n    getCsv(){\r\n        const csv = this.state.data.map(feature => {\r\n            let s = feature.properties['fuldt ansvarlige deltagere'];\r\n            if(s !== null && s.length > 0){\r\n                feature.properties['fuldt ansvarlige deltagere'] = s.replace(/\"/g,'');\r\n            }\r\n            return feature.properties;\r\n        \r\n        });\r\n        return csv;\r\n    }\r\n\r\n    \r\n\r\n    filterData(feature){\r\n        const { Fraflytter, Tilflytter, Oph√∏rt, Nystartet }= this.state;\r\n        const checked = [];\r\n        if(Fraflytter) checked.push('Fraflytter');\r\n        if(Tilflytter) checked.push('Tilflytter');\r\n        if(Oph√∏rt) checked.push('Oph√∏rt');\r\n        if(Nystartet) checked.push('Nystartet');\r\n        return checked.indexOf(feature.properties.status) > -1;\r\n\r\n    }\r\n\r\n    getKommuner(){\r\n       // let komUrl = \"https://drayton.mapcentia.com/api/v1/sql/ballerup?q=select right(komkode, 3)::int komkode, \"\r\n       //                 +\"komnavn from data.kommune group by komkode, komnavn order by komnavn\";\r\n        let komUrl = \"kom.json\";\r\n        let that = this;\r\n        jQuery.ajax({\r\n            url: komUrl,\r\n            type: 'GET',\r\n            dataType: 'json',\r\n            success: function(res){\r\n                let koms = res.features.map(feature => feature.properties);\r\n                that.setState((preveState) => ({kommuner: koms}));\r\n            }\r\n        });\r\n    }\r\n\r\n    getData(komkode,startDate, endDate){ \r\n        this.setState((preveState) => ({csvData: [], loading: true}));\r\n        let that = this;\r\n        if(!komkode){\r\n            this.setState({loading:false});\r\n            return;\r\n        } \r\n       // let dataUrl = \"https://drayton.mapcentia.com/api/v1/sql/ballerup?q=SELECT * FROM cvr.flyt_fad(\"  \r\n        //            + komkode + \",'2019-08-01','2019-08-31')&srs=4326\";\r\n        let dataUrl = \"data.json\";\r\n        jQuery.ajax({\r\n            url: dataUrl,\r\n            type: 'GET',\r\n            dataType: 'json',\r\n            success: function(res){\r\n                that.setState((preveState) => ({data: res.features}));\r\n                // console.log(res.features);\r\n                let csv = res.features.map(feature => feature.properties);\r\n                that.setState((prevState) => ({csvData: csv, loading: false}));\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChecked(event){\r\n        event.persist();\r\n        let {data, Fraflytter, Tilflytter, Oph√∏rt, Nystartet }= this.state;\r\n        this.setState((preveState) => ({[event.target.value]: event.target.checked}),() =>{\r\n            Fraflytter = this.state.Fraflytter;\r\n            Tilflytter = this.state.Tilflytter;\r\n            Oph√∏rt = this.state.Oph√∏rt;\r\n            Nystartet  = this.state.Nystartet;\r\n        } );    \r\n               \r\n       \r\n        const _checked = [];\r\n        if(Fraflytter) _checked.push('Fraflytter');\r\n        if(Tilflytter) _checked.push('Tilflytter');\r\n        if(Oph√∏rt) _checked.push('Oph√∏rt');\r\n        if(Nystartet) _checked.push('Nystartet');\r\n       \r\n        let newData = data.filter((feature) => {\r\n            // console.log(feature.properties.status);\r\n            return _checked.indexOf(feature.properties.status) > -1;\r\n        });\r\n      \r\n      \r\n        this.setState({data: newData});\r\n\r\n        \r\n\r\n    }\r\n    handleSelect(event){ \r\n        event.persist();\r\n        this.setState((prevState) => ({komkode : event.target.value}));\r\n    }\r\n\r\n    componentDidMount(){\r\n        let { komkode, startDate, endDate } = this.state;\r\n        this.getData(komkode, startDate, endDate);\r\n        this.getKommuner();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        //clearInterval(this.timer);\r\n    }\r\n\r\n    handleChange(event, value){\r\n       this.setState({ value });\r\n    };\r\n\r\n    handleDoneClick(){\r\n        let {komkode, startDate, endDate} = this.state;\r\n        this.getData(komkode,startDate,endDate);\r\n        navigate(`/${komkode}`)\r\n    }\r\n\r\n    handleStart(date){ \r\n        this.setState({\r\n            startDate: date.format('YYYY-MM-DD')\r\n        });\r\n    };\r\n\r\n    handleEnd(date){ \r\n        this.setState({\r\n            endDate: date.format('YYYY-MM-DD')\r\n        });\r\n    }\r\n  \r\n    render(){\r\n        console.log(\"props from router => \",this.props.komnr);\r\n        const { value, startDate, endDate, kommuner, komkode } = this.state;\r\n        const locale = 'da';\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n            \r\n                <div className='app'>\r\n                    <div className={this.state.loading ? 'loading':''}></div>\r\n                    <div className=''>\r\n                        <AppBar position=\"static\" color=\"default\">\r\n                            <Toolbar>\r\n                                <Grid container /*spacing={}*/>\r\n                                    <Grid item xs={2}>\r\n                                        <Typography variant=\"h6\" color=\"inherit\">\r\n                                            CVR Flyttem√∏nster\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <form className={classnames.container} noValidate autoComplete=\"off\">\r\n                                            <TextField \r\n                                                id=\"standard-select\"\r\n                                                select\r\n                                                label=\"Kommune\"\r\n                                                placeholder=\"Placeholder\"\r\n                                                className={classnames.textField}\r\n                                                value={this.state.komkode || ''}\r\n                                                onChange={this.handleSelect}\r\n                                                SelectProps={{\r\n                                                    native: true,\r\n                                                    \r\n                                                }}\r\n                                                helperText=\"\"\r\n                                                InputLabelProps={{ shrink: true }}\r\n                                            >\r\n                                            {kommuner.map(kom =>{\r\n                                                let selected = this.state.komkode === kom.komkode ? 'selected' : false;\r\n                                                if(selected) console.log(kom.komnavn)\r\n                                                return (\r\n                                                <option key={kom.komkode} value={kom.komkode}>\r\n                                                    {kom.komnavn}\r\n                                                </option>\r\n                                            )})}      \r\n                                            </TextField>\r\n                                        </form>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <MuiPickersUtilsProvider utils={MomentUtils} locale={locale} moment={moment}>\r\n                                            <DatePicker \r\n                                                value={startDate}\r\n                                                label=\"Startdato\"\r\n                                                format=\"DD MMM YYYY\"\r\n                                                onChange={this.handleStart}\r\n                                            />   \r\n                                        </MuiPickersUtilsProvider>       \r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                            <DatePicker \r\n                                                value={endDate}\r\n                                                label=\"Slutdato\"\r\n                                                format=\"DD MMM YYYY\"\r\n                                                onChange={this.handleEnd}\r\n                                            />   \r\n                                        </MuiPickersUtilsProvider>       \r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <IconButton arial-label=\"Done\" onClick={this.handleDoneClick} >\r\n                                            <DoneIcon/>\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={2}>\r\n                                           \r\n                                        \r\n                                        {\r\n                                            this.state.csvData.length > 0 &&\r\n                                            (\r\n                                                <ExcelFile \r\n                                                element={\r\n                                                    <IconButton arial-label=\"Excel\">\r\n                                                        <CloudDownload />\r\n                                                    </IconButton>\r\n                                                }\r\n                                                filename={'export_'+ komkode + '_' + startDate + '_' + endDate}\r\n                                                >\r\n                                                <ExcelSheet data={this.state.csvData} name=\"CVR\">\r\n                                                    <ExcelColumn label=\"Status\" value=\"status\"/>\r\n                                                    <ExcelColumn label=\"CVR nummer\" value=\"cvr-nummer\"/>\r\n                                                    <ExcelColumn label=\"P nummer\" value=\"p-nummer\"/>\r\n                                                    <ExcelColumn label=\"Branche\" value=\"hovedbranche\"/>\r\n                                                    <ExcelColumn label=\"Virksomhedsnavn\" value=\"navn\"/>\r\n                                                    <ExcelColumn label=\"Kontaktperson\" value=\"fuldt ansvarlige deltagere\"/>\r\n                                                    <ExcelColumn label=\"Kommunekode\" value=\"kommunekode\"/>\r\n                                                    <ExcelColumn label=\"vejnavn\" value=\"vejnavn\"/>\r\n                                                    <ExcelColumn label=\"Husnummer\" value=\"husnummer\"/>\r\n                                                    <ExcelColumn label=\"Postnummer\" value=\"postnummer\"/>\r\n                                                    <ExcelColumn label=\"By\" value=\"postdistrikt\"/>\r\n                                                    <ExcelColumn label=\"Email\" value=\"emailadresse\"/>\r\n                                                    <ExcelColumn label=\"Indl√¶st dato\" value=\"indl√¶st dato\"/>\r\n                                                </ExcelSheet>\r\n                                                \r\n                                            </ExcelFile>\r\n                                            )\r\n                                        }\r\n                                       \r\n                                          \r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                                        \r\n                            <Tabs \r\n                                value={value} \r\n                                onChange={this.handleChange}\r\n                                centered\r\n                                >\r\n                                <Tab icon={\r\n                                    <Tooltip title=\"Kort\">\r\n                                        <Map/>\r\n                                  </Tooltip>\r\n                                } />\r\n                                <Tab icon={\r\n                                    <Tooltip title=\"Tabel\">\r\n                                        <TableChart/>\r\n                                  </Tooltip>\r\n                                \r\n                                } \r\n                                aria-label=\"Tabel\"\r\n                                />\r\n                                <Tab icon={\r\n                                    <Tooltip title=\"Grapher\">\r\n                                        <BarChart/>\r\n                                  </Tooltip>\r\n                                \r\n                                } />\r\n                                {/* <Tab icon={\r\n                                    <Tooltip title=\"DataTable\">\r\n                                        <DataTable/>\r\n                                  </Tooltip>\r\n                                \r\n                                } /> */}\r\n                            </Tabs>\r\n                        {value === 0 && <TabContainer><MapData data={this.state.data}/></TabContainer>} \r\n                        {value === 1 && <TabContainer><GridData data={this.state.data} /></TabContainer>}\r\n                        {value === 2 && <TabContainer><GraphData data={this.state.data} /></TabContainer>}\r\n                        {/* {value === 3 && <TabContainer><DataTable /></TabContainer>} */}\r\n                    </div>\r\n                  \r\n                </div>\r\n                        {/* <FormGroup row>\r\n                            <FormControlLabel \r\n                                control={\r\n                                    <Switch\r\n                                        checked={this.state.Fraflytter}\r\n                                        onChange={this.handleChecked}\r\n                                        color=\"primary\"\r\n                                        value=\"Fraflytter\"\r\n                                    />\r\n                                }\r\n                                label=\"Fraflyttet\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control={\r\n                                    <Switch\r\n                                        checked={this.state.Tilflytter}\r\n                                        onChange={this.handleChecked}\r\n                                        color=\"primary\"\r\n                                        value=\"Tilflytter\"\r\n                                    />\r\n                                }\r\n                                label=\"Tilflyttet\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control={\r\n                                    <Switch\r\n                                        checked={this.state.Oph√∏rt}\r\n                                        onChange={this.handleChecked}\r\n                                        color=\"primary\"\r\n                                        value=\"Oph√∏rt\"\r\n                                    />\r\n                                }\r\n                                label=\"Oph√∏rt\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control={\r\n                                    <Switch\r\n                                        checked={this.state.Nystartet}\r\n                                        onChange={this.handleChecked}\r\n                                        color=\"primary\"\r\n                                        value=\"Nystartet\"\r\n                                    />\r\n                                }\r\n                                label=\"Nystartet\"\r\n                            />\r\n                        </FormGroup> */}\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n/*\r\n\r\n{loading && <CircularProgress size={50} value={this.state.completed} color=\"primary\" variant=\"determinate\" className={classnames.progress} />} \r\n*/\r\nexport default withStyles(styles)(App);\r\n\r\n/*\r\nTODO: \r\n\r\n First do the graph data with Victory library!!! then filters!!!!\r\n 1. Implement filters: use switches or dropdown with checkboxes.\r\n \r\n\r\n Next => use filterData, til show only checked values\r\n\r\n FIX THE FILTERING OF DATA\r\n*/","import React from \"react\";\r\nimport { Router } from \"@reach/router\";\r\nimport App from \"./App\";\r\n\r\nconst Home = () => (\r\n  <Router>\r\n    <App path=\"/\" />\r\n    <App path=\"/:komnr\" />\r\n  </Router>\r\n);\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n//import App from './App';\r\nimport Home from \"./Home\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}